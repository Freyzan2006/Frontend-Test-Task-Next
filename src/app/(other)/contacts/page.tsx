'use client';

import { useState, useEffect } from 'react';
import { Card } from "@ui-kit/ui/Card";
import { Input } from "@ui-kit/ui/Input";
import { Button } from "@ui-kit/ui/Button";
import { TitleTextGroup } from "@ui-kit/ui/Font";
import { Notice } from "@ui-kit/ui/Notice";
import { AlertGroup } from "@ui-kit/ui/Alert";
import { LinkApp } from '@ui-kit/ui/LinkApp';

interface ContactForm {
  name: string;
  email: string;
  subject: string;
  message: string;
}

interface ContactInfo {
  id: string;
  type: 'email' | 'phone' | 'address' | 'social';
  label: string;
  value: string;
  icon: string;
  link?: string;
}

export default function ContactsPage() {
  const [formData, setFormData] = useState<ContactForm>({
    name: '',
    email: '',
    subject: '',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | null>(null);
  const [contactInfo, setContactInfo] = useState<ContactInfo[]>([]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (CSR)
  useEffect(() => {
    const loadContactInfo = async () => {
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      setTimeout(() => {
        setContactInfo([
          {
            id: '1',
            type: 'email',
            label: 'Email',
            value: 'hello@company.com',
            icon: '‚úâÔ∏è',
            link: 'mailto:hello@company.com'
          },
          {
            id: '2',
            type: 'phone',
            label: '–¢–µ–ª–µ—Ñ–æ–Ω',
            value: '+7 (999) 123-45-67',
            icon: 'üìû',
            link: 'tel:+79991234567'
          },
          {
            id: '3',
            type: 'address',
            label: '–ê–¥—Ä–µ—Å',
            value: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123',
            icon: 'üìç',
            link: 'https://maps.google.com'
          },
          {
            id: '4',
            type: 'social',
            label: 'Telegram',
            value: '@company_name',
            icon: 'üì±',
            link: 'https://t.me/company_name'
          }
        ]);
      }, 500);
    };

    loadContactInfo();
  }, []);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    setSubmitStatus(null);

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π API call
      // await fetch('/api/contacts', {
      //   method: 'POST',
      //   body: JSON.stringify(formData)
      // });

      setSubmitStatus('success');
      setFormData({ name: '', email: '', subject: '', message: '' });
    } catch (error) {
      setSubmitStatus('error');
    } finally {
      setIsSubmitting(false);
    }
  };

  const isFormValid = formData.name && formData.email && formData.subject && formData.message;

  return (
    <Card className="min-h-screen  py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-7xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-16">
          <TitleTextGroup 
            title="–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏" 
            text="–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã —É—Å–ª—ã—à–∞—Ç—å –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã"
            gap="md"
          />
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="lg:col-span-1">
            <Card className="h-full p-6 bg-white/80 backdrop-blur-sm">
              <h3 className="text-xl font-semibold text-gray-900 mb-6">–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h3>
              
              <div className="space-y-4">
                {contactInfo.length > 0 ? (
                  contactInfo.map((contact) => (
                    <div
                      key={contact.id}
                      className="flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors duration-200"
                    >
                      <span className="text-2xl flex-shrink-0">{contact.icon}</span>
                      <div className="flex-1 min-w-0">
                        <p className="text-sm font-medium text-gray-900">{contact.label}</p>
                        {contact.link ? (
                          <a
                            href={contact.link}
                            className="text-blue-600 hover:text-blue-800 transition-colors duration-200 text-sm break-words"
                            target={contact.link.startsWith('http') ? '_blank' : '_self'}
                            rel={contact.link.startsWith('http') ? 'noopener noreferrer' : ''}
                          >
                            {contact.value}
                          </a>
                        ) : (
                          <p className="text-gray-600 text-sm">{contact.value}</p>
                        )}
                      </div>
                    </div>
                  ))
                ) : (
                  // Skeleton loading
                  Array.from({ length: 4 }).map((_, index) => (
                    <div key={index} className="flex items-start space-x-3 p-3">
                      <div className="w-6 h-6 bg-gray-200 rounded animate-pulse"></div>
                      <div className="flex-1 space-y-2">
                        <div className="h-4 bg-gray-200 rounded w-3/4 animate-pulse"></div>
                        <div className="h-3 bg-gray-200 rounded w-1/2 animate-pulse"></div>
                      </div>
                    </div>
                  ))
                )}
              </div>

              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="mt-8 pt-6 border-t border-gray-200">
                <h4 className="text-lg font-semibold text-gray-900 mb-3">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</h4>
                <div className="space-y-2 text-sm text-gray-600">
                  <div className="flex justify-between">
                    <span>–ü–Ω-–ü—Ç:</span>
                    <span className="font-medium">9:00 - 18:00</span>
                  </div>
                  <div className="flex justify-between">
                    <span>–°–±-–í—Å:</span>
                    <span className="font-medium">10:00 - 16:00</span>
                  </div>
                </div>
              </div>
            </Card>
          </div>

          {/* –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ */}
          <div className="lg:col-span-2">
            <Card className="p-8 bg-white/80 backdrop-blur-sm">
              <h3 className="text-2xl font-bold text-gray-900 mb-2">–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º</h3>
              <p className="text-gray-600 mb-8">
                –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
              </p>

              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <Input
                    label="–í–∞—à–µ –∏–º—è"
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                    required
                    disabled={isSubmitting}
                  />
                  
                  <Input
                    label="Email"
                    name="email"
                    type="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    placeholder="ivan@example.com"
                    required
                    disabled={isSubmitting}
                  />
                </div>

                <Input
                  label="–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"
                  name="subject"
                  value={formData.subject}
                  onChange={handleInputChange}
                  placeholder="–û —á—ë–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?"
                  required
                  disabled={isSubmitting}
                />

                <div>
                  <label htmlFor="message" className="block text-sm font-medium text-gray-700 mb-2">
                    –°–æ–æ–±—â–µ–Ω–∏–µ *
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    rows={6}
                    value={formData.message}
                    onChange={handleInputChange}
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–∞—à–µ–º –≤–æ–ø—Ä–æ—Å–µ..."
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-none disabled:opacity-50 disabled:cursor-not-allowed"
                    required
                    disabled={isSubmitting}
                  />
                </div>

                <AlertGroup>
                  {submitStatus === 'success' && (
                    <Notice 
                      message="–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è." 
                      variant="success" 
                    />
                  )}
                  {submitStatus === 'error' && (
                    <Notice 
                      message="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑." 
                      variant="error" 
                    />
                  )}
                </AlertGroup>

                <Button
                  type="submit"
                  variant="primary"
                  disabled={!isFormValid || isSubmitting}
                  className="w-full md:w-auto min-w-[200px]"
                  loading={isSubmitting}
                >
                  {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'}
                </Button>
              </form>
            </Card>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫ */}
            <Card className="mt-6 p-6 bg-gradient-to-r from-blue-500 to-indigo-600 text-white">
              <div className="text-center">
                <h4 className="text-xl font-semibold mb-2">–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?</h4>
                <p className="mb-4 opacity-90">
                  –ó–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å - –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å
                </p>
                <Button
                  variant="secondary"
                  className="bg-white text-blue-600 hover:bg-gray-100"
                >
                  <LinkApp href={'tel:+99890'}>
                    üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å —Å–µ–π—á–∞—Å
                  </LinkApp>
                </Button>
              </div>
            </Card>
          </div>
        </div>

        {/* –ö–∞—Ä—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */}
        <Card className="mt-8 p-6 bg-white/80 backdrop-blur-sm">
          <h3 className="text-xl font-semibold text-gray-900 mb-4">–ú—ã –Ω–∞ –∫–∞—Ä—Ç–µ</h3>
          <div className="bg-gray-200 rounded-lg h-64 flex items-center justify-center">
            <div className="text-center text-gray-500">
              <div className="text-4xl mb-2">üó∫Ô∏è</div>
              <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –±—É–¥–µ—Ç –∑–¥–µ—Å—å</p>
              <p className="text-sm mt-2">(–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Maps –∏–ª–∏ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã)</p>
            </div>
          </div>
        </Card>
      </div>
    </Card>
  );
}